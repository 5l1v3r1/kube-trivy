/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/knqyf263/kube-trivy/pkg/apis/kubetrivy/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DeploymentVulnerabilityLister helps list DeploymentVulnerabilities.
type DeploymentVulnerabilityLister interface {
	// List lists all DeploymentVulnerabilities in the indexer.
	List(selector labels.Selector) (ret []*v1.DeploymentVulnerability, err error)
	// DeploymentVulnerabilities returns an object that can list and get DeploymentVulnerabilities.
	DeploymentVulnerabilities(namespace string) DeploymentVulnerabilityNamespaceLister
	DeploymentVulnerabilityListerExpansion
}

// deploymentVulnerabilityLister implements the DeploymentVulnerabilityLister interface.
type deploymentVulnerabilityLister struct {
	indexer cache.Indexer
}

// NewDeploymentVulnerabilityLister returns a new DeploymentVulnerabilityLister.
func NewDeploymentVulnerabilityLister(indexer cache.Indexer) DeploymentVulnerabilityLister {
	return &deploymentVulnerabilityLister{indexer: indexer}
}

// List lists all DeploymentVulnerabilities in the indexer.
func (s *deploymentVulnerabilityLister) List(selector labels.Selector) (ret []*v1.DeploymentVulnerability, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DeploymentVulnerability))
	})
	return ret, err
}

// DeploymentVulnerabilities returns an object that can list and get DeploymentVulnerabilities.
func (s *deploymentVulnerabilityLister) DeploymentVulnerabilities(namespace string) DeploymentVulnerabilityNamespaceLister {
	return deploymentVulnerabilityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DeploymentVulnerabilityNamespaceLister helps list and get DeploymentVulnerabilities.
type DeploymentVulnerabilityNamespaceLister interface {
	// List lists all DeploymentVulnerabilities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.DeploymentVulnerability, err error)
	// Get retrieves the DeploymentVulnerability from the indexer for a given namespace and name.
	Get(name string) (*v1.DeploymentVulnerability, error)
	DeploymentVulnerabilityNamespaceListerExpansion
}

// deploymentVulnerabilityNamespaceLister implements the DeploymentVulnerabilityNamespaceLister
// interface.
type deploymentVulnerabilityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DeploymentVulnerabilities in the indexer for a given namespace.
func (s deploymentVulnerabilityNamespaceLister) List(selector labels.Selector) (ret []*v1.DeploymentVulnerability, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DeploymentVulnerability))
	})
	return ret, err
}

// Get retrieves the DeploymentVulnerability from the indexer for a given namespace and name.
func (s deploymentVulnerabilityNamespaceLister) Get(name string) (*v1.DeploymentVulnerability, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("deploymentvulnerability"), name)
	}
	return obj.(*v1.DeploymentVulnerability), nil
}
